name: "Light House"

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
    inputs:
      REACT_APP_ENV_NAME:
        required: true
        type: string
      DEPLOY_TO_FLEEK:
        required: true
        type: boolean
      UPDATE_COVERAGE:
        required: true
        type: boolean
      ENV_NAME:
        required: true
        type: string
      REACT_APP_ENABLE_CURATION_LISTS:
        required: true
        type: boolean
      REACT_APP_SELLER_CURATION_LIST:
        required: false
        type: string
      REACT_APP_OFFER_CURATION_LIST:
        required: false
        type: string
      REACT_APP_CREATE_PROFILE_CONFIGURATION:
        required: true
        type: string
      REACT_APP_IPFS_GATEWAY:
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true
      FLEEK_API_KEY:
        required: false
      CODECOV_TOKEN:
        required: true
      REACT_APP_INFURA_IPFS_PROJECT_ID:
        required: false
      REACT_APP_INFURA_IPFS_PROJECT_SECRET:
        required: false
      REACT_APP_DEFAULT_TOKENS_LIST_TESTING:
        required: false
      REACT_APP_DEFAULT_TOKENS_LIST_STAGING:
        required: false
      REACT_APP_DEFAULT_TOKENS_LIST_PRODUCTION:
        required: false
      REACT_APP_RNFT_LICENSE_TEMPLATE:
        required: true
      REACT_APP_BUYER_SELLER_AGREEMENT_TEMPLATE:
        required: true
      REACT_APP_DEFAULT_DISPUTE_RESOLVER_ID:
        required: true
      REACT_APP_DEFAULT_RESOLUTION_PERIOD_DAYS:
        required: true
      REACT_APP_GOOGLE_TAG_ID:
        required: false
      REACT_APP_META_TX_API_KEY:
        required: true
      REACT_APP_META_TX_API_IDS:
        required: true

jobs:
  lighthouseci:
    runs-on: ubuntu-latest
    env:
      REACT_APP_ENV_NAME: ${{ inputs.REACT_APP_ENV_NAME }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      REACT_APP_ENABLE_CURATION_LISTS: ${{ inputs.REACT_APP_ENABLE_CURATION_LISTS }}
      REACT_APP_SELLER_CURATION_LIST: ${{ inputs.REACT_APP_SELLER_CURATION_LIST }}
      REACT_APP_OFFER_CURATION_LIST: ${{ inputs.REACT_APP_OFFER_CURATION_LIST }}
      REACT_APP_IPFS_GATEWAY: ${{ inputs.REACT_APP_IPFS_GATEWAY }}
      REACT_APP_RNFT_LICENSE_TEMPLATE: ${{ secrets.REACT_APP_RNFT_LICENSE_TEMPLATE }}
      REACT_APP_BUYER_SELLER_AGREEMENT_TEMPLATE: ${{ secrets.REACT_APP_BUYER_SELLER_AGREEMENT_TEMPLATE }}
      REACT_APP_DEFAULT_DISPUTE_RESOLVER_ID: ${{ secrets.REACT_APP_DEFAULT_DISPUTE_RESOLVER_ID }}
      REACT_APP_DEFAULT_RESOLUTION_PERIOD_DAYS: ${{ secrets.REACT_APP_DEFAULT_RESOLUTION_PERIOD_DAYS }}
      REACT_APP_INFURA_IPFS_PROJECT_ID: ${{ secrets.REACT_APP_INFURA_IPFS_PROJECT_ID }}
      REACT_APP_INFURA_IPFS_PROJECT_SECRET: ${{ secrets.REACT_APP_INFURA_IPFS_PROJECT_SECRET }}
      REACT_APP_DEFAULT_TOKENS_LIST_TESTING: ${{ secrets.REACT_APP_DEFAULT_TOKENS_LIST_TESTING }}
      REACT_APP_DEFAULT_TOKENS_LIST_STAGING: ${{ secrets.REACT_APP_DEFAULT_TOKENS_LIST_STAGING }}
      REACT_APP_CREATE_PROFILE_CONFIGURATION: ${{ inputs.REACT_APP_CREATE_PROFILE_CONFIGURATION }}
      REACT_APP_DEFAULT_TOKENS_LIST_PRODUCTION: ${{ secrets.REACT_APP_DEFAULT_TOKENS_LIST_PRODUCTION }}
      REACT_APP_GOOGLE_TAG_ID: ${{ secrets.REACT_APP_GOOGLE_TAG_ID }}
      REACT_APP_META_TX_API_KEY: ${{ secrets.REACT_APP_META_TX_API_KEY }}
      REACT_APP_META_TX_API_IDS: ${{ secrets.REACT_APP_META_TX_API_IDS }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: actions/setup-node@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          node-version: "16.16.0"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"
      - name: Install Packages
        run: npm install
      - name: Install lhci
        run: npm install --location=global @lhci/cli@0.9.x
      - name: Run Build
        run: npm run build
      - name: Lauch lhci
        run: |
          npm run serve &
          ls build/
          lhci autorun
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
